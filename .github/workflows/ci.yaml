name: CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
    - uses: actions/checkout@v3

    - name: Read .nvmrc
      run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Build package
      run: npm run build
      env:
        NODE_OPTIONS: --max_old_space_size=4096

    - name: Build docs
      run: npm run docs:build
      env:
        NODE_OPTIONS: --max_old_space_size=4096

    - name: Deploy develop docs to GitHub Pages
      if: github.ref == 'refs/heads/develop'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/.vitepress/dist
        destination_dir: ./

    - name: Deploy develop docs to GitHub Pages
      if: github.ref == 'refs/heads/develop'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/.vitepress/dist
        destination_dir: ./develop

    - name: Authenticate with npm
      run: |
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
        npm whoami
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    # - name: Publish to npm (main branch)
    #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    #   run: npm publish
    #   env:
    #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Publish alpha version to npm (develop branch)
      if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
        npm config set git-tag-version false

        # Get the current version
        CURRENT_VERSION=$(node -p "require('./package.json').version")

        # Increment the version
        npm version prerelease --preid=alpha

        # Get the new version
        NEW_VERSION=$(node -p "require('./package.json').version")

        # If the version didn't change, force an increment
        if [ "$CURRENT_VERSION" == "$NEW_VERSION" ]; then
          npm version prerelease --preid=alpha --force
          NEW_VERSION=$(node -p "require('./package.json').version")
        fi

        npm publish --tag alpha --access public

        git add package.json
        git commit -m "Bump version to ${NEW_VERSION} [skip ci]"
        git push
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
